# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import kvstore_pb2 as kvstore__pb2

GRPC_GENERATED_VERSION = '1.72.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in kvstore_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class KVStoreStub(object):
    """Servicio
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.set = channel.unary_unary(
                '/kvstore.KVStore/set',
                request_serializer=kvstore__pb2.KeyValue.SerializeToString,
                response_deserializer=kvstore__pb2.Empty.FromString,
                _registered_method=True)
        self.get = channel.unary_unary(
                '/kvstore.KVStore/get',
                request_serializer=kvstore__pb2.Key.SerializeToString,
                response_deserializer=kvstore__pb2.GetResponse.FromString,
                _registered_method=True)
        self.getPrefix = channel.unary_unary(
                '/kvstore.KVStore/getPrefix',
                request_serializer=kvstore__pb2.Prefix.SerializeToString,
                response_deserializer=kvstore__pb2.GetPrefixResponse.FromString,
                _registered_method=True)
        self.stat = channel.unary_unary(
                '/kvstore.KVStore/stat',
                request_serializer=kvstore__pb2.Empty.SerializeToString,
                response_deserializer=kvstore__pb2.StatResponse.FromString,
                _registered_method=True)


class KVStoreServicer(object):
    """Servicio
    """

    def set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPrefix(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KVStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'set': grpc.unary_unary_rpc_method_handler(
                    servicer.set,
                    request_deserializer=kvstore__pb2.KeyValue.FromString,
                    response_serializer=kvstore__pb2.Empty.SerializeToString,
            ),
            'get': grpc.unary_unary_rpc_method_handler(
                    servicer.get,
                    request_deserializer=kvstore__pb2.Key.FromString,
                    response_serializer=kvstore__pb2.GetResponse.SerializeToString,
            ),
            'getPrefix': grpc.unary_unary_rpc_method_handler(
                    servicer.getPrefix,
                    request_deserializer=kvstore__pb2.Prefix.FromString,
                    response_serializer=kvstore__pb2.GetPrefixResponse.SerializeToString,
            ),
            'stat': grpc.unary_unary_rpc_method_handler(
                    servicer.stat,
                    request_deserializer=kvstore__pb2.Empty.FromString,
                    response_serializer=kvstore__pb2.StatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'kvstore.KVStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('kvstore.KVStore', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KVStore(object):
    """Servicio
    """

    @staticmethod
    def set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KVStore/set',
            kvstore__pb2.KeyValue.SerializeToString,
            kvstore__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KVStore/get',
            kvstore__pb2.Key.SerializeToString,
            kvstore__pb2.GetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getPrefix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KVStore/getPrefix',
            kvstore__pb2.Prefix.SerializeToString,
            kvstore__pb2.GetPrefixResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/kvstore.KVStore/stat',
            kvstore__pb2.Empty.SerializeToString,
            kvstore__pb2.StatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
